{
    "contestId": 108589,
    "problems": [
        {
            "info": {
                "score": 50,
                "acceptedCount": 1574,
                "submitCount": 2511,
                "tagId": 293095,
                "index": "A",
                "myStatus": "通过",
                "problemId": 294401,
                "title": "小红的签到题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214244",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 已知变量主流有两种命名方式：“驼峰命名法”和“下划线命名法”。小红更喜欢用“下划线命名法”。这个命名法的规则是：  \n$\\hspace{23pt}\\bullet\\,$ 变量名仅由小写字母和下划线组成，用下划线来连接每个单词（单词不能为空），每个单词均由小写字母组成，每两个单词之间有一个下划线（ $\\texttt{`_'}$ ）。例如， $\\texttt{$ ， $\\texttt{$ 均为下划线命名法。  \n\n$\\hspace{15pt}$ 现在小红希望你写出一个长度为 $n$ 的、使用了下划线命名法命名的变量。为了显出特征，请保证该变量至少由两个单词组成。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 输入一个正整数 $n \\left(3 \\leqq n \\leqq 100\\right)$ ，代表需要构造的变量长度。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 输出一个长度为 $n$ 的字符串，代表你所构造的使用了下划线命名法命名的变量。  \n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "11",
                        "output": "kato_megumi",
                        "tips": ""
                    }
                ]
            }
        },
        {
            "info": {
                "score": 100,
                "acceptedCount": 1268,
                "submitCount": 3455,
                "tagId": 293096,
                "index": "B",
                "myStatus": "通过",
                "problemId": 294403,
                "title": "小红的模拟题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214298",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 给定一个 $n$ 行 $m$ 列的网格，我们使用 $(i,j)$ 表示网格中从上往下数第 $i$ 行和从左往右数第 $j$ 列的格子。小红现在位于 $(1,1)$ ，准备前往 $(n,m)$ 。  \n$\\hspace{15pt}$ 然而，不是所有的格子都是可以通行的，有且恰有一个格子是陷阱格，一旦小红踏入陷阱格，就会直接去逝。保证这个陷阱格不会出现在 $(1,1)$ 和 $(n,m)$ 。  \n$\\hspace{15pt}$ 小红每一步只能向右或者向下前进。请你帮小红规划一条行动路线，使得她可以顺利到达 $(n,m)$ 。  \n\n$\\hspace{15pt}$ 行动路线为一个仅由字符 $\\texttt{`D'}$ 、 $\\texttt{`S'}$ 构成的字符串 $s$ ，第 $i$ 个字符代表小红第 $i$ 次行动的方向。记第 $i$ 次行动前小红位于 $(x,y)$ ，则：  \n$\\hspace{23pt}\\bullet\\,$ 若 $s_i = \\texttt{`D'}$ ，则小红向右移动一格即抵达 $(x,y+1)$ ；  \n$\\hspace{23pt}\\bullet\\,$ 若 $s_i = \\texttt{`S'}$ ，则小红向下移动一格即抵达 $(x+1,y)$ 。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 第一行输入两个正整数 $n,m \\left(2 \\leqq n,m \\leqq 10^3\\right)$ ，代表网格的行数和列数。  \n$\\hspace{15pt}$ 接下来的 $n$ 行，第 $i$ 行输入一个长度为 $m$ 的、仅由 $\\texttt{`.'}$ 和 $\\texttt{`\\#'}$ 构成的字符串 $a_{i,1}a_{i,2}\\cdots a_{i,m}$ 。其中 $a_{i,j} = \\texttt{`.'}$ 表示格子 $(i,j)$ 可以通行， $a_{i,j} = \\texttt{`\\#'}$ 表示格子 $(i,j)$ 是陷阱格。  \n\n$\\hspace{15pt}$ 除此之外，保证有且只有一个陷阱格，且不位于 $(1,1)$ 和 $(n,m)$ 。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 输出一个字符串，代表小红的行动路线。  \n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "2 3\n...\n.#.",
                        "output": "DDS",
                        "tips": "$\\hspace{15pt}$ 在这个样例中，小红先向右走两步，然后向下走一步，即可安全到达目的地。  \n"
                    }
                ]
            }
        },
        {
            "info": {
                "score": 150,
                "acceptedCount": 1077,
                "submitCount": 2597,
                "tagId": 293097,
                "index": "C",
                "myStatus": "通过",
                "problemId": 294405,
                "title": "小红的方神题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214303",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 对于数组 $a$ ，我们定义它的退化状态为：取每个相邻两数之差的绝对值构成的新数组。换句话说，退化后的 $a$ 数组是一个长度为 ${\\rm len}(a)-1$ 的数组，其第 $i$ 个元素为 $\\lvert a_i - a_{i+1} \\rvert$ 。  \n$\\hspace{15pt}$ TRfirst 希望小红构造一个长度为 $n$ 的排列，使得其连续进行 $n-1$ 次退化后，最终生成的一个整数恰好等于 $n-2$ 。你能帮帮小红吗？如果不存在这样的排列，直接输出 $-1$ 即可。  \n\n$\\hspace{15pt}$ 长度为 $n$ 的<u>排列</u>是由 $1,2,\\dots,n$ 这 $n$ 个整数、按任意顺序组成的数组（每个整数均恰好出现一次）。例如， $\\{2,3,1,5,4\\}$ 是一个长度为 $5$ 的排列，而 $\\{1,2,2\\}$ 和 $\\{1,3,4\\}$ 都不是排列，因为前者存在重复元素，后者包含了超出范围的数。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 输入一个正整数 $n \\left(1 \\leqq n \\leqq 10^3\\right)$ ，代表待构造的排列的长度。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 如果不存在满足条件的排列，直接输出 $-1$ 。否则，在一行中输出 $n$ 个两两不同的正整数 $a_1,a_2,\\dots,a_n \\left(1 \\leqq a_i \\leqq n\\right)$ ，代表小红构造的排列。  \n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "3",
                        "output": "1 3 2",
                        "tips": "$\\hspace{15pt}$ 在这个样例中，数组 $\\{1,3,2\\}$ 退化一次后得到 $\\{2,1\\}$ ，再退化一次后得到 $\\{1\\}$ ，恰好等于 $n-2$ 。  \n"
                    },
                    {
                        "input": "1",
                        "output": "-1",
                        "tips": "$\\hspace{15pt}$ 唯一的初始排列为 $\\{1\\}$ ，经过 $0$ 次退化后，最终值为 $1$ 。  \n"
                    }
                ]
            }
        },
        {
            "info": {
                "score": 225,
                "acceptedCount": 690,
                "submitCount": 4745,
                "tagId": 293099,
                "index": "D",
                "myStatus": "通过",
                "problemId": 294428,
                "title": "小红的数学题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214733",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 小红拿到了一个正整数 $k$ ，她希望你找到两个正整数 $p,q$ ，满足 $p+q=k$ ，且方程 $x^2-px+q=0$ 存在两个正整数解。特别地，如果不存在这样的 $p,q$ ，请输出 $-1$ 。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 一个正整数 $k \\left(1 \\leqq k \\leqq 10^{12}\\right)$ 。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 如果不存在这样的 $p,q$ ，直接输出 $-1$ 。否则，在一行上输出两个整数 $p$ 和 $q$ ，代表满足条件的正整数解。  \n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "8",
                        "output": "4 4",
                        "tips": "$x^2-4x+4=0$ 有一个重根：2，也被视为两个正整数解。  \n"
                    },
                    {
                        "input": "2",
                        "output": "-1",
                        "tips": ""
                    },
                    {
                        "input": "5",
                        "output": "3 2",
                        "tips": "$x^2-3x+2=0$ 有两个根：1和2。  \n  \n"
                    }
                ]
            }
        },
        {
            "info": {
                "score": 225,
                "acceptedCount": 417,
                "submitCount": 1007,
                "tagId": 293098,
                "index": "E",
                "myStatus": "通过",
                "problemId": 294416,
                "title": "小红的ds题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214513",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 小红希望你构造一棵层数为 $n$ 的<u>二叉树</u>，其第 $i$ 层恰好有 $a_i$ 个节点。你能帮帮她吗？  \n\n$\\hspace{15pt}$ 一棵树被称为<u>二叉树</u>，当且仅当其满足：  \n$\\hspace{23pt}\\bullet\\,$ 每个节点要么没有父节点连接（此时该节点被称为根节点）、要么被 $1$ 个父节点连接（此时该节点被称为父节点的子节点）；  \n$\\hspace{23pt}\\bullet\\,$ 每个节点连接的子节点数量要么为 $0$ （此时该节点被称为叶子节点）、要么小于等于 $2$ （此时该节点被称为分支节点）。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 第一行输入一个正整数 $n \\left(1 \\leqq n \\leqq 10^4\\right)$ ，代表二叉树的层数。  \n$\\hspace{15pt}$ 第二行输入 $n$ 个正整数 $a_1,a_2,\\dots,a_n \\left(1 \\leqq a_i \\leqq 10^5\\right)$ ，代表二叉树的第 $i$ 层的节点数量限制。保证 $a_1 = 1$ ，且对于 $2 \\leqq i \\leqq n$ ，均有 $a_i \\leqq a_{i-1} \\times 2$ 。  \n\n$\\hspace{15pt}$ 除此之外，保证单个测试文件的 $a_i$ 之和不超过 $10^5$ 。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 第一行输出一个正整数 $p \\left(1 \\leqq p \\leqq n\\right)$ ，代表根结点的编号。编号从 $1$ 开始。  \n$\\hspace{15pt}$ 此后输出 $\\sum\\limits_{i=1}^n a_i$ 行，第 $i$ 行输出两个元素 $l_i,r_i$ ，分别代表 $i$ 号节点的左儿子和右儿子的编号。特别的，如果不存在左儿子/右儿子，则输出 $-1$ 替代这个编号。  \n\n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "3\n1 2 3",
                        "output": "4\n-1 -1\n1 -1\n6 5\n2 3\n-1 -1\n-1 -1",
                        "tips": "![image.png](https://uploadfiles.nowcoder.com/images/20250509/0_1746775610366/F144092F2E22BAFC37032980A8C24E7B)   \n"
                    }
                ]
            }
        },
        {
            "info": {
                "score": 250,
                "acceptedCount": 109,
                "submitCount": 1074,
                "tagId": 293100,
                "index": "F",
                "myStatus": "未通过",
                "problemId": 294436,
                "title": "小红的小苯题",
                "info": {}
            },
            "extra": {
                "tagId": "4",
                "questionId": "11214862",
                "subTagId": "1",
                "doneQuestionId": "108589",
                "content": "## 题目描述\n\n$\\hspace{15pt}$ 小苯希望小红构造一个 $n$ 行 $m$ 列的矩阵，满足：  \n$\\hspace{23pt}\\bullet\\,$ 每一行所有元素的异或和、每一列所有元素的异或和，这 $n+m$ 个数恰好构成一个长度为 $n+m$ 的<u>排列</u>。  \n$\\hspace{23pt}\\bullet\\,$ 矩阵中每个元素的值在 $0$ 到 $10^9$ 之间。  \n$\\hspace{15pt}$ 你能帮帮小红吗？  \n\n$\\hspace{15pt}$ 长度为 $n$ 的<u>排列</u>是由 $1,2,\\dots,n$ 这 $n$ 个整数、按任意顺序组成的数组（每个整数均恰好出现一次）。例如， $\\{2,3,1,5,4\\}$ 是一个长度为 $5$ 的排列，而 $\\{1,2,2\\}$ 和 $\\{1,3,4\\}$ 都不是排列，因为前者存在重复元素，后者包含了超出范围的数。  \n\n\n## 输入描述\n\n$\\hspace{15pt}$ 在一行上输入两个整数 $n, m \\left(1 \\leqq n, m \\leqq 500\\right)$ ，表示矩阵的行数和列数。  \n\n\n## 输出描述\n\n$\\hspace{15pt}$ 如果无法构造出满足条件的矩阵，直接输出 $-1$ 。否则，输出 $n$ 行，每行 $m$ 个整数，表示你所构造的矩阵。  \n$\\hspace{15pt}$ 如果存在多个解决方案，您可以输出任意一个，系统会自动判定是否正确。注意，自测运行功能可能因此返回错误结果，请自行检查答案正确性。  \n\n\n",
                "examples": [
                    {
                        "input": "1 2",
                        "output": "1 3",
                        "tips": "第一行所有元素的异或和等于2。  \n第一列所有元素的异或和等于1。  \n第二列所有元素的异或和等于3。  \n{2,1,3}恰好构成一个排列，符合条件。  \n"
                    },
                    {
                        "input": "2 2",
                        "output": "-1",
                        "tips": ""
                    }
                ]
            }
        }
    ]
}